$primary_color: #000;
$scaling_factor: 1;

$node_gap: 1em;
/* setting a size in em makes sure that the gap scales too with the scaling factor */
$sm_node_gap: $node_gap * .6;
$lg_node_gap: $node_gap * 1.5;

$connector_width: .0625em;
$connector_style: dashed;

/* image colors and style*/
$secondary_color:red;

.tf-tree {
    overflow: auto;
    font-size: 16px * $scaling_factor;

    * {
        box-sizing: border-box;
        padding: 0;
        margin: 0;
    }

    ul {
        display: inline-flex;
    }

    li {
        position: relative;
        display: flex;
        flex-direction: column;
        flex-wrap: wrap;
        align-items: center;
        padding: 0 $node_gap;

        ul {
            margin: ($node_gap * 2) 0;
        }

        li:before {
            display: block;
            position: absolute;
            width: 100%;
            left: calc(0% - #{$connector_width / 2});
            top: calc(#{-$node_gap} - #{$connector_width / 2});
            content: '';
            border-top: $connector_width $connector_style $primary_color;
            height: $connector_width;
        }

        li:first-child:before {
            left: calc(50% - #{$connector_width / 2});
            max-width: calc(100% - 50% + #{$connector_width});
        }

        li:last-child:before {
            left: auto;
            right: calc(50% - #{$connector_width / 2});
            max-width: calc(100% - 50% + #{$connector_width});
        }

        li:only-child:before {
            display: none;
        }

        li:only-child>.tf-node-content:before,
        li:only-child>.tf-nc:before {
            height: calc(#{$node_gap} + #{$connector_width});
            top: calc(#{-$node_gap} - #{$connector_width});
        }
    }

    .tf-node-content,
    .tf-nc {
        position: relative;
        display: inline-block;
        // border: $connector_width solid $primary_color;
        border: none;
        padding: ($node_gap / 2) $node_gap;

        &:before {
            position: absolute;
            display: block;
            height: $node_gap;
            left: calc(50% - #{$connector_width / 2});
            top: calc(#{-$node_gap} - #{$connector_width / 2});
            content: '';
            border-left: $connector_width $connector_style $primary_color;
            width: $connector_width;
        }

        &:after {
            position: absolute;
            display: block;
            height: $node_gap;
            left: calc(50% - #{$connector_width / 2});
            top: calc(100% + #{$connector_width / 2});
            content: '';
            border-left: $connector_width $connector_style $primary_color;
            width: $connector_width;
        }

        &:only-child:after {
            display: none;
        }
    }

    >ul>li>.tf-node-content:before,
    >ul>li>.tf-nc:before {
        display: none;
    }

    &.tf-gap-sm li {
        padding: 0 $sm_node_gap;

        >.tf-node-content,
        >.tf-nc {
            &:before {
                height: $sm_node_gap;
                top: -$sm_node_gap;
            }

            &:after {
                height: $sm_node_gap;
            }
        }

        ul {
            margin: ($sm_node_gap * 2) 0;
        }

        li:before {
            top: calc(#{-$sm_node_gap} - #{$connector_width / 2});
        }

        li:only-child>.tf-node-content:before,
        li:only-child>.tf-nc:before {
            height: calc(#{$sm_node_gap} + #{$connector_width});
            top: calc(#{-$sm_node_gap} - #{$connector_width});
        }
    }

    &.tf-gap-lg li {
        padding: 0 $lg_node_gap;

        >.tf-node-content,
        >.tf-nc {
            &:before {
                height: $lg_node_gap;
                top: -$lg_node_gap;
            }

            &:after {
                height: $lg_node_gap;
            }
        }

        ul {
            margin: ($lg_node_gap * 2) 0;
        }

        li:before {
            top: calc(#{-$lg_node_gap} - #{$connector_width / 2});
        }

        li:only-child>.tf-node-content:before,
        li:only-child>.tf-nc:before {
            height: calc(#{$lg_node_gap} + #{$connector_width});
            top: calc(#{-$lg_node_gap} - #{$connector_width});
        }
    }

    li.tf-dotted-children {

        .tf-node-content,
        .tf-nc {

            &:before,
            &:after {
                border-left-style: dotted;
            }
        }

        li:before {
            border-top-style: dotted;
        }

        >.tf-node-content:before,
        >.tf-nc:before {
            border-left-style: solid;
        }
    }

    li.tf-dashed-children {

        .tf-node-content,
        .tf-nc {

            &:before,
            &:after {
                border-left-style: dashed;
            }
        }

        li:before {
            border-top-style: dashed;
        }

        >.tf-node-content:before,
        >.tf-nc:before {
            border-left-style: solid;
        }
    }
}

.img-rhombus-shape {
    -webkit-clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
    clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
    width: 120px;
    height: 120px;
}

.img-round-shape {
    -webkit-clip-path: inset(0% 0% 0% 0% round 5% 5% 5% 5%);
    clip-path: inset(0% 0% 0% 0% round 5% 5% 5% 5%);
    width: 120px;
    height: 120px;
}

.img-octagon-shape {
    -webkit-clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);
    clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);
    width: 120px;
    height: 120px;
}

.img-circle-shape {
    -webkit-clip-path: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    width: 120px;
    height: 120px;
}





.round-shape-container {
    -webkit-clip-path: inset(3% 0% 3% 0% round 5% 5% 5% 5%);
    clip-path: inset(3% 0% 3% 0% round 5% 5% 5% 5%);
    position: relative;
    width: 120px;
}

.round-shape-container .overlay {
    position: absolute;
    top: 44%;
    bottom: 0%;
    background: rgb(0, 0, 0);
    background: rgba(0, 0, 0, 0.5);
    color: #f1f1f1;
    width: 100%;
    transition: .5s ease;
    opacity: 1;
    color: white;
    font-size: 16px;
    text-align: center;
}

.circle-shape-container {
    -webkit-clip-path: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    width: 120px;
    height: 120px;
}

.circle-shape-container .overlay {
    position: absolute;
    top: 50%;
    bottom: 0%;
    background: rgb(0, 0, 0);
    background: rgba(0, 0, 0, 0.5);
    color: #f1f1f1;
    width: 100%;
    transition: .5s ease;
    opacity: 1;
    color: white;
    font-size: 16px;
    text-align: center;
}

.octagon-shape-container {
    -webkit-clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);
    clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);
    width: 120px;
    height: 120px;
}

.octagon-shape-container .overlay {
    position: absolute;
    top: 50%;
    bottom: 0%;
    background: rgb(0, 0, 0);
    background: rgba(0, 0, 0, 0.5);
    color: #f1f1f1;
    width: 100%;
    transition: .5s ease;
    opacity: 1;
    color: white;
    font-size: 16px;
    text-align: center;
}

.rhombus-shape-container {
    -webkit-clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
    clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
    position: relative;
    width: 120px;
}

.rhombus-shape-container .overlay {
    position: absolute;
    top: 50%;
    bottom: 0%;
    background: rgb(0, 0, 0);
    background: rgba(0, 0, 0, 0.5);
    color: #f1f1f1;
    width: 100%;
    transition: .5s ease;
    opacity: 1;
    color: white;
    font-size: 16px;
    text-align: center;
}

.t-margin-3 {
    margin-left: 30px;
    // margin-left: 0px;

}

.round-img-lg {
    width: 200px;
    height: 220px;
}

.progress-66 {
    top: 44% !important;
}

.progress-100 {
    top: 0% !important;
}

.progress-72 {
    top: 28% !important;
}

.progress-89 {
    top: 11% !important;
}

.progress-56 {
    top: 44% !important;
}

.progress-30 {
    top: 70% !important;
}
progress-35{
    top: 65% !important;
}

.bg-none {
    background: none !important;
}

.bg-text-center {
    top: 60% !important;
    width: 80% !important;
}



 

